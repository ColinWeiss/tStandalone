--- src/Terraria/Terraria/Item.cs
+++ src/tStandalone/Terraria/Item.cs
@@ -13,7 +_,7 @@
 
 namespace Terraria
 {
-	public class Item : Entity
+	public partial class Item : Entity
 	{
 		private string _nameOverride;
 		public const int luckPotionDuration1 = 10800;
@@ -39,8 +_,8 @@
 		public static int[] headType = new int[266];
 		public static int[] bodyType = new int[235];
 		public static int[] legType = new int[218];
-		public static bool[] staff = new bool[5045];
+		public static bool[] staff = new bool[ItemID.Count];
-		public static bool[] claw = new bool[5045];
+		public static bool[] claw = new bool[ItemID.Count];
 		public bool flame;
 		public bool mech;
 		public int noGrabDelay;
@@ -170,10 +_,7 @@
 
 		public bool FitsAccessoryVanitySlot {
 			get {
-				if (!canBePlacedInVanityRegardlessOfConditions && handOnSlot == -1 && handOffSlot == -1 && backSlot == -1 && frontSlot == -1 && shoeSlot == -1 && waistSlot == -1 && wingSlot == -1 && shieldSlot == -1 && neckSlot == -1 && faceSlot == -1)
-					return balloonSlot != -1;
+				return balloonSlot != -1;
-
-				return true;
 			}
 		}
 
@@ -42601,6 +_,7 @@
 					useAnimation = 20;
 					useTime = 20;
 					rare = -13;
+					master = true;
 					noMelee = true;
 					noUseGraphic = true;
 					mountType = 44 + type - 4792;
@@ -42630,6 +_,7 @@
 					DefaultToVanitypet(881 + type - 4797, 284 + type - 4797);
 					value = buyPrice(0, 25);
 					rare = -13;
+					master = true;
 					break;
 				case 4818:
 					noMelee = true;
@@ -43160,6 +_,7 @@
 					DefaultToPlacableTile((ushort)617, type - 4924);
 					SetShopValues(ItemRarityColor.Blue1, buyPrice(0, 5));
 					rare = -13;
+					material = true;
 					maxStack = 99;
 					break;
 				case 4951:
@@ -43277,6 +_,7 @@
 					DefaultToVanitypet(934, 317);
 					value = buyPrice(0, 25);
 					rare = -13;
+					master = true;
 					break;
 				case 4961:
 					DefaultToCapturedCritter(661);
@@ -43681,6 +_,14 @@
 				case 5044:
 					DefaultToMusicBox(85);
 					break;
+				default:
+					ModdedSetDefaults(type);
+					break;
+			}
+
+			// Ensure all Master Mode items have the Master Mode rarity
+			if (master) {
+				rare = (int)ItemRarityColor.MasterMinus13;
 			}
 		}
 
@@ -44361,7 +_,7 @@
 				playerIndexTheItemIsReservedFor = Main.myPlayer;
 
 			ResetStats(Type);
-			if (type >= 5045)
+			if (type >= ItemID.Count)
 				type = 0;
 
 			if (type == 0) {
@@ -44387,6 +_,12 @@
 				SetDefaults5(type);
 			}
 
+
+			// Ensure that items with the Master Mode rarity are marked as master.
+			if (rare == (int)ItemRarityColor.MasterMinus13) {
+				master = true;
+			}
+
 			dye = (byte)GameShaders.Armor.GetShaderIdFromItemId(type);
 			if (hairDye != 0)
 				hairDye = GameShaders.Hair.GetShaderIdFromItemId(type);
@@ -44540,11 +_,11 @@
 				material = ItemID.Sets.IsAMaterial[type];
 
 			RebuildTooltip();
-			if (type > 0 && type < 5045 && ItemID.Sets.Deprecated[type]) {
+			/*if (type > 0 && type < ItemID.Count && ItemID.Sets.Deprecated[type]) {
 				netID = 0;
 				type = 0;
 				stack = 0;
-			}
+			}*/
 		}
 
 		public void ResetStats(int Type) {
@@ -45840,7 +_,7 @@
 				Prefix(reader.ReadByte());
 			}
 
-			if (type >= 5045)
+			if (type >= ItemID.Count)
 				TurnToAir();
 		}
 
