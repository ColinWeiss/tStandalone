--- src/Terraria/Terraria/Main.cs
+++ src/tModLoader/Terraria/Main.cs
@@ -69,6 +_,7 @@
 using Terraria.Net;
 using Terraria.ObjectData;
 using Terraria.Social;
+using Terraria.sTandalone;
 using Terraria.UI;
 using Terraria.UI.Chat;
 using Terraria.UI.Gamepad;
@@ -175,6 +_,34 @@
 			public bool LanternNightActive;
 		}
 
+		//STANDALONE VARIABLES
+		#region STANDALONE
+		public static string sTandaloneVersion = "v1.0.0.0";
+
+		public static bool _showWelcomeMessage = true;
+		public static bool restartRequired = false;
+		public static bool terrariaPlus = false;
+		public static bool masterModeReloaded = false;
+
+		public static int YellowtoWhiteDir = 1;
+
+		public static float YellowtoWhite = 1f;
+
+		public enum Mod
+		{
+			TerrariaPlus,
+			MasterModeReloaded
+		}
+
+		public static List<Mod> enabledMods = new List<Mod>();
+
+		#region TERRARIA_PLUS
+		public static bool firstFractalRecipe = false;
+		public static bool slowerMasterModeRarity = false;
+		public static bool allAccessoriesInVanitySlots = false;
+		#endregion
+		#endregion
+
 		private const string versionStringBecauseTheyreTheSame = "v1.4.0.5";
 		public const int curRelease = 230;
 		public const string assemblyVersionNumber = "1.4.0.5";
@@ -3031,6 +_,7 @@
 
 		public static bool SaveSettings() {
 			Configuration.Clear();
+			sMain.sTandalonePut();
 			Configuration.Put("ResetDefaultUIScale", false);
 			Configuration.Put("SmartCursorToggle", cSmartCursorModeIsToggleAndNotHold);
 			Configuration.Put("MapEnabled", mapEnabled);
@@ -3150,6 +_,8 @@
 			if (currentValue < 219)
 				flag = true;
 
+			sMain.sTandaloneGet();
+
 			if (!flag) {
 				Configuration.Get("ResetDefaultUIScale", ref shouldSetDefaultUIScale);
 				Configuration.Get("Fullscreen", ref startFullscreen);
@@ -8178,6 +_,8 @@
 			base.GraphicsDevice.DeviceResetting += GraphicsDeviceLost;
 			if (_needsLanguageSelect)
 				menuMode = 1212;
+			if (!_needsLanguageSelect && _showWelcomeMessage)
+				menuMode = 694201;
 
 			_achievements = new AchievementManager();
 			_achievementAdvisor = new AchievementAdvisor();
@@ -13285,7 +_,7 @@
 			if (mouseTextColor <= 190)
 				mouseTextColorChange = 1;
 
-			masterColor += (float)masterColorDir * 0.05f;
+			masterColor += (float)masterColorDir * (slowerMasterModeRarity ? 0.01f : 0.05f);
 			if (masterColor > 1f) {
 				masterColor = 1f;
 				masterColorDir = -1;
@@ -13295,6 +_,17 @@
 				masterColor = 0f;
 				masterColorDir = 1;
 			}
+
+			YellowtoWhite += (float)YellowtoWhiteDir * (dayTime ? 0.05f : 0.01f);
+			if (YellowtoWhite > 1f) {
+				YellowtoWhite = 1f;
+				YellowtoWhiteDir = -1;
+			}
+
+			if (YellowtoWhite < 0f) {
+				YellowtoWhite = 0f;
+				YellowtoWhiteDir = 1;
+			}
 		}
 
 		private static void DoUpdate_AnimateTileGlows() {
@@ -15233,7 +_,7 @@
 					numLines++;
 				}
 
-				if (!item.vanity && item.FitsAccessoryVanitySlot) {
+				if (!item.vanity && item.FitsAccessoryVanitySlot && (!terrariaPlus && !enabledMods.Contains(Mod.TerrariaPlus) && !allAccessoriesInVanitySlots)) {
 					toolTipLine[numLines] = Language.GetText("Misc.CanBePlacedInVanity").Value;
 					numLines++;
 				}
@@ -18877,7 +_,7 @@
 									else if (type == 389) {
 										mySpriteBatch.Draw(TextureAssets.GlowMask[34].Value, new Vector2(rCurrentNPC.position.X - screenPos.X + (float)(rCurrentNPC.width / 2) - (float)TextureAssets.Npc[type].Width() * rCurrentNPC.scale / 2f + halfSize.X * rCurrentNPC.scale, rCurrentNPC.position.Y - screenPos.Y + (float)rCurrentNPC.height - (float)TextureAssets.Npc[type].Height() * rCurrentNPC.scale / (float)npcFrameCount[type] + 4f + halfSize.Y * rCurrentNPC.scale + num37 + num36 + rCurrentNPC.gfxOffY), frame5, new Microsoft.Xna.Framework.Color(255, 255, 255, 0), rCurrentNPC.rotation, halfSize, rCurrentNPC.scale, spriteEffects, 0f);
 									}
-									else if (type == 4 && rCurrentNPC.ai[1] >= 4f && rCurrentNPC.ai[0] == 3f) {
+									else if (type == 4 && ((rCurrentNPC.ai[1] >= 4f && rCurrentNPC.ai[0] == 3f) || (rCurrentNPC.ai[0] == 5f && rCurrentNPC.ai[1] == 1f))) {
 										for (int num135 = 1; num135 < rCurrentNPC.oldPos.Length; num135++) {
 											_ = ref rCurrentNPC.oldPos[num135];
 											Microsoft.Xna.Framework.Color color35 = npcColor;
@@ -35964,7 +_,10 @@
 				if (selectedMenu >= 1) {
 					changeTheTitle = true;
 					LanguageManager.Instance.SetLanguage(selectedMenu);
+					if (_showWelcomeMessage)
+						menuMode = 694201;
+					else
-					menuMode = 0;
+						menuMode = 0;
 					SoundEngine.PlaySound(10);
 					SaveSettings();
 				}
@@ -36391,7 +_,7 @@
 				netMode = 0;
 				ClearVisualPostProcessEffects();
 				int num11 = 0;
-				num5 = 6;
+				num5 = 7;
 				num4 = 60;
 				array9[num11] = Lang.menu[12].Value;
 				if (selectedMenu == num11) {
@@ -36424,6 +_,13 @@
 				}
 
 				num11++;
+				array9[num11] = Language.GetText("Modded.Mods").Value;
+				if (selectedMenu == num11) {
+					SoundEngine.PlaySound(10);
+					menuMode = 694202;
+				}
+
+				num11++;
 				array9[num11] = Lang.menu[14].Value;
 				if (selectedMenu == num11) {
 					SoundEngine.PlaySound(10);
@@ -36434,6 +_,7 @@
 				array9[num11] = Lang.menu[15].Value;
 				if (selectedMenu == num11)
 					QuitGame();
+				array6[num11] = restartRequired ? (byte)8 : (byte)0;
 
 				num11++;
 			}
@@ -37032,8 +_,8 @@
 				else if (menuMode == 11) {
 					num2 = 210;
 					num4 = 37;
-					num5 = 8;
+					num5 = 9;
-					array4[num5 - 1] = 8;
+					array4[num5 - 1] = 9;
 					for (int num19 = 0; num19 < num5; num19++) {
 						array7[num19] = 0.75f;
 					}
@@ -37088,6 +_,15 @@
 					}
 
 					num20++;
+					array[num20] = (enabledMods.Count() >= 1) ? false : true;
+					array6[num20] = ((enabledMods.Count() >= 1) ? (byte)0 : (byte)9);
+					array9[num20] = Language.GetTextValue("Modded.ModSettings");
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						menuMode = 694203;
+					}
+
+					num20++;
 					array9[num20] = Lang.menu[5].Value;
 					if (selectedMenu == num20 || flag5) {
 						flag5 = false;
@@ -38121,6 +_,141 @@
 						netMode = 0;
 					}
 				}
+				else if (menuMode == 694201) {
+					num5 = 2;
+					array9[0] = Language.GetTextValue("Modded.WelcomeMessage");
+					array[0] = true;
+					num2 = 220;
+					num4 = 250;
+					array9[1] = Language.GetTextValue("Modded.Continue");
+					if (selectedMenu == 1) {
+						_showWelcomeMessage = false;
+						SaveSettings();
+						SoundEngine.PlaySound(11);
+						menuMode = 0;
+						netMode = 0;
+					}
+				}
+				else if (menuMode == 694202) {
+					num2 = 210;
+					num4 = 37;
+					num5 = 9;
+					int num20 = 0;
+
+					array4[num5 - 1] = 9;
+					for (int num19 = 1; num19 < num5; num19++) {
+						array7[num19] = 0.75f;
+					}
+
+					array9[num20] = Language.GetTextValue("Modded.ModList");
+					array[num20] = true;
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.StopAsking");
+					array[num20] = true;
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.TerrariaPlus") + ((terrariaPlus && enabledMods.Contains(Mod.TerrariaPlus)) ? Language.GetTextValue("Modded.Enabled") : Language.GetTextValue("Modded.Disabled"));
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						terrariaPlus = !terrariaPlus;
+
+						restartRequired = true;
+					}
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.MasterModeReloaded") + ((masterModeReloaded && enabledMods.Contains(Mod.MasterModeReloaded)) ? Language.GetTextValue("Modded.Enabled") : Language.GetTextValue("Modded.Disabled"));
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						masterModeReloaded = !masterModeReloaded;
+
+					}
+
+					num20++;
+					//array9[num20] = "";
+
+					num20++;
+					//array9[num20] = "";
+
+					num20++;
+					//array9[num20] = "";
+
+					num20++;
+					array9[num20] = Lang.menu[5].Value;
+					if (selectedMenu == num20 || flag5) {
+						flag5 = false;
+						SoundEngine.PlaySound(11);
+						menuMode = 0;
+						SaveSettings();
+					}
+
+					num20++;
+					array9[num20] = (restartRequired ? Language.GetTextValue("Modded.RestartRequired") : "");
+					array6[num20] = 3;
+					array[num20] = true;
+				}
+				else if (menuMode == 694203) {
+					num2 = 210;
+					num4 = 37;
+					num5 = 9;
+					int num20 = 0;
+
+					array4[num5 - 1] = 9;
+					for (int num19 = 1; num19 < num5; num19++) {
+						array7[num19] = 0.75f;
+					}
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.TerrariaPlus");
+					array[num20] = true;
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.SlowerMasterModeRarity") + (slowerMasterModeRarity ? Language.GetTextValue("Modded.Enabled") : Language.GetTextValue("Modded.Disabled"));
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						slowerMasterModeRarity = slowerMasterModeRarity ? false : true;
+
+						restartRequired = true;
+					}
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.FirstFractalRecipe") + (firstFractalRecipe ? Language.GetTextValue("Modded.Enabled") : Language.GetTextValue("Modded.Disabled"));
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						firstFractalRecipe = firstFractalRecipe ? false : true;
+
+						restartRequired = true;
+					}
+
+					num20++;
+					array9[num20] = Language.GetTextValue("Modded.AccessoryInAnyVanity") + (allAccessoriesInVanitySlots ? Language.GetTextValue("Modded.Enabled") : Language.GetTextValue("Modded.Disabled"));
+					if (selectedMenu == num20) {
+						SoundEngine.PlaySound(10);
+						allAccessoriesInVanitySlots = allAccessoriesInVanitySlots ? false : true;
+
+						restartRequired = true;
+					}
+
+					num20++;
+					//array9[num20] = "";
+
+					num20++;
+					//array9[num20] = "";
+
+					num20++;
+					array9[num20] = Lang.menu[5].Value;
+					if (selectedMenu == num20 || flag5) {
+						flag5 = false;
+						SoundEngine.PlaySound(11);
+						menuMode = 11;
+						SaveSettings();
+					}
+
+					num20++;
+					array9[num20] = (restartRequired ? Language.GetTextValue("Modded.RestartRequired") : "");
+					array6[num20] = 3;
+					array[num20] = true;
+				}
 			}
 
 			if (menuMode == 888) {
@@ -38671,6 +_,15 @@
 							case 6:
 								color11 = errorColor;
 								break;
+							case 7:
+								color11 = new Color(DiscoR, DiscoG, DiscoB);
+								break;
+							case 8:
+								color11 = new Color(255, 255, (byte)(Main.YellowtoWhite * 255f), Main.mouseTextColor);
+								break;
+							case 9:
+								color11 = Color.Black;
+								break;
 							default:
 								color11 = color;
 								break;
@@ -38852,10 +_,13 @@
 					if (num107 == 3)
 						num109 = 2;
 
-					Vector2 origin2 = FontAssets.MouseText.Value.MeasureString(versionNumber);
+					Vector2 origin1 = FontAssets.MouseText.Value.MeasureString("Terraria " + versionNumber);
+					spriteBatch.DrawString(FontAssets.MouseText.Value, "Terraria " + versionNumber, new Vector2(origin1.X + (float)num108 + 10f, (float)screenHeight - origin1.Y + (float)num109 - 2f), color12, 0f, origin1, 1f, SpriteEffects.None, 0f);
+
+					Vector2 origin2 = FontAssets.MouseText.Value.MeasureString("sTandalone " + sTandaloneVersion);
 					origin2.X *= 0.5f;
 					origin2.Y *= 0.5f;
-					spriteBatch.DrawString(FontAssets.MouseText.Value, versionNumber, new Vector2(origin2.X + (float)num108 + 10f, (float)screenHeight - origin2.Y + (float)num109 - 2f), color12, 0f, origin2, 1f, SpriteEffects.None, 0f);
+					spriteBatch.DrawString(FontAssets.MouseText.Value, "sTandalone " + sTandaloneVersion, new Vector2(origin2.X + (float)num108 + 10f, (float)screenHeight - origin2.Y + (float)num109 - 2f), color12, 0f, origin2, 1f, SpriteEffects.None, 0f);
 				}
 			}
 
