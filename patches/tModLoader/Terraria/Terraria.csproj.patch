--- src/decompiled/Terraria/Terraria.csproj
+++ src/Terraria/Terraria/Terraria.csproj
@@ -1,34 +_,64 @@
 <Project Sdk="Microsoft.NET.Sdk">
   <Import Project="../Configuration.targets" />
+  <Import Project="../../TerrariaSteamPath.targets" />
   <PropertyGroup>
     <OutputType>WinExe</OutputType>
     <Version>1.4.0.5</Version>
     <Company>Re-Logic</Company>
     <Copyright>Copyright Â© 2020 Re-Logic</Copyright>
     <RootNamespace>Terraria</RootNamespace>
+	<OutputName>Terraria</OutputName>
   </PropertyGroup>
   <PropertyGroup Condition="$(Configuration.Contains('Server'))">
     <OutputType>Exe</OutputType>
     <OutputName>$(OutputName)Server</OutputName>
   </PropertyGroup>
+  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
+    <OutputName>$(OutputName)Debug</OutputName>
+  </PropertyGroup>
+  <PropertyGroup>
+    <PdbFile>bin\$(OutputName)</PdbFile>
+    <ApplicationIcon>Icon.ico</ApplicationIcon>
+  </PropertyGroup>
   <ItemGroup>
+    <Reference Include="FNA" Condition="$(DefineConstants.Contains('FNA'))">
+      <HintPath>..\..\..\references\FNA.dll</HintPath>
+    </Reference>
     <Reference Include="Ionic.Zip.CF" />
-    <Reference Include="Microsoft.Xna.Framework" />
-    <Reference Include="Microsoft.Xna.Framework.Game" />
-    <Reference Include="Microsoft.Xna.Framework.Graphics" />
-    <Reference Include="Microsoft.Xna.Framework.Xact" />
+    <Reference Include="Microsoft.Xna.Framework" Condition="$(DefineConstants.Contains('XNA'))">
+      <Private>true</Private>
+    </Reference>
+    <Reference Include="Microsoft.Xna.Framework.Game" Condition="$(DefineConstants.Contains('XNA'))">
+      <Private>true</Private>
+    </Reference>
+    <Reference Include="Microsoft.Xna.Framework.Graphics" Condition="$(DefineConstants.Contains('XNA'))">
+      <Private>true</Private>
+    </Reference>
+    <Reference Include="Microsoft.Xna.Framework.Xact" Condition="$(DefineConstants.Contains('XNA'))">
+      <Private>true</Private>
+    </Reference>
     <Reference Include="Newtonsoft.Json" />
-    <Reference Include="RailSDK.Net" />
+    <Reference Include="RailSDK.Net">
+      <HintPath Condition="$(DefineConstants.Contains('WINDOWS'))">Libraries/Windows/RailSDK.Net.dll</HintPath>
+      <HintPath Condition="$(DefineConstants.Contains('MAC'))">Libraries/Mac/RailSDK.Net.dll</HintPath>
+      <HintPath Condition="$(DefineConstants.Contains('LINUX'))">Libraries/Linux/RailSDK.Net.dll</HintPath>
+    </Reference>
     <ProjectReference Include="../ReLogic/ReLogic.csproj" />
     <EmbeddedResource Include="../ReLogic/bin/$(Configuration)/$(TargetFramework)/ReLogic.dll">
       <LogicalName>Terraria.Libraries.ReLogic.ReLogic.dll</LogicalName>
     </EmbeddedResource>
-    <Reference Include="Steamworks.NET" />
+    <Reference Include="Steamworks.NET">
+      <HintPath Condition="$(DefineConstants.Contains('WINDOWS'))">Libraries/Windows/Steamworks.NET.dll</HintPath>
+      <HintPath Condition="$(DefineConstants.Contains('MAC'))">Libraries/Mac/Steamworks.NET.dll</HintPath>
+      <HintPath Condition="$(DefineConstants.Contains('LINUX'))">Libraries/Linux/Steamworks.NET.dll</HintPath>
+    </Reference>
     <Reference Include="System" />
     <Reference Include="System.Core" />
     <Reference Include="System.Drawing" />
     <Reference Include="System.Runtime.Serialization" />
-    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System.Windows.Forms">
+      <HintPath Condition="$(DefineConstants.Contains('Mono'))">Libraries/Mono/System.Windows.Forms.dll</HintPath>
+    </Reference>
     <Reference Include="WindowsBase" />
   </ItemGroup>
   <ItemGroup>
@@ -37,7 +_,29 @@
     <EmbeddedResource Include="GameContent/WorldBuilding/*" />
     <EmbeddedResource Include="IO/Data/*" />
     <EmbeddedResource Include="Libraries/**" />
+    <EmbeddedResource Remove="Libraries/Windows/**" Condition="!$(Configuration.Contains('Windows'))" />
+    <EmbeddedResource Remove="Libraries/Mac/**" Condition="!$(Configuration.Contains('Mac'))" />
+    <EmbeddedResource Remove="Libraries/Linux/**" Condition="!$(Configuration.Contains('Linux'))" />
+    <EmbeddedResource Remove="Libraries/Mono/**" Condition="!$(Configuration.Contains('Mono'))" />
     <EmbeddedResource Include="Localization/Content/**" />
     <EmbeddedResource Include="Microsoft/**" />
   </ItemGroup>
+  <Target Name="EditBin" AfterTargets="Build">
+    <PropertyGroup>
+        <EditBinOpts>/largeaddressaware</EditBinOpts>
+		<DumpBin>/headers</DumpBin>
+    </PropertyGroup>
+    <PropertyGroup Condition="$(DefineConstants.Contains('DEBUG'))">
+        <EditBinOpts>$(EditBinOpts) /stack:0x800000</EditBinOpts>
+    </PropertyGroup>
+    <Message Text="Applying editbin $(EditBinOpts)" Importance="high" />
+    <Exec Command="&quot;$(SolutionDir)largeaddresstool\editbin&quot; $(EditBinOpts) &quot;$(TargetPath)&quot;" />
+	<Message Text="Checking headers with dumpbin." Importance="high" />
+	<Exec Command="&quot;$(SolutionDir)largeaddresstool\dumpbin&quot; $(DumpBin) &quot;$(TargetPath)&quot; | findstr &quot;large&quot;" />
+  </Target>
+  <Target Name="CopyToStreamDir" AfterTargets="EditBin" Condition="$(Configuration.Contains('Windows'))">
+    <Message Text="Copying $(OutputName) to Steam Dir..." Importance="high" />
+    <Copy SourceFiles="$(TargetPath)" DestinationFiles="$(TerrariaSteamPath)\$(OutputName).exe" />
+    <Copy SourceFiles="$(TargetDir)$(OutputName).pdb" DestinationFolder="$(TerrariaSteamPath)" />
+  </Target>
 </Project>
